# Generated by Django 4.1.7 on 2023-03-10 09:10

from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_link', models.TextField()),
                ('mark', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Complect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_link', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('check_times', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='EventStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Expert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mail', models.CharField(max_length=50)),
                ('referee', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='PatternTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_score', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_coord', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None), size=None)),
                ('file_link', models.TextField()),
                ('pattern', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ripc.patterntask')),
            ],
        ),
        migrations.CreateModel(
            name='ThirdMark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_date', models.DateTimeField()),
                ('check_time', models.IntegerField()),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ripc.answer')),
            ],
        ),
        migrations.CreateModel(
            name='Variant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_link', models.TextField()),
                ('page_len', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
            ],
        ),
        migrations.CreateModel(
            name='ThirdMarkExpert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ripc.expert')),
                ('third_mark', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ripc.thirdmark')),
            ],
        ),
        migrations.CreateModel(
            name='TaskExpert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_date', models.DateTimeField()),
                ('check_time', models.IntegerField()),
                ('expert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ripc.expert')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ripc.task')),
            ],
        ),
        migrations.AddField(
            model_name='task',
            name='variant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ripc.variant'),
        ),
        migrations.CreateModel(
            name='ScannedPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_link', models.TextField()),
                ('complect', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ripc.complect')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ripc.event')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ripc.organization')),
            ],
        ),
        migrations.CreateModel(
            name='RegionRep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ripc.region')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='patterntask',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ripc.subject'),
        ),
        migrations.CreateModel(
            name='OrganizationRep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ripc.organization')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percent_status', models.CharField(max_length=3)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ripc.event')),
                ('event_status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ripc.eventstatus')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ripc.organization')),
            ],
        ),
        migrations.AddField(
            model_name='organization',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ripc.region'),
        ),
        migrations.AddField(
            model_name='expert',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ripc.organization'),
        ),
        migrations.AddField(
            model_name='expert',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ripc.subject'),
        ),
        migrations.AddField(
            model_name='expert',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='complect',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ripc.event'),
        ),
        migrations.AddField(
            model_name='complect',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ripc.organization'),
        ),
        migrations.AddField(
            model_name='complect',
            name='variant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ripc.variant'),
        ),
        migrations.AddField(
            model_name='answer',
            name='complect',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ripc.complect'),
        ),
        migrations.AddField(
            model_name='answer',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ripc.task'),
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
